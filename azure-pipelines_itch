# Deploy Unity to Itch
# Author:   AndrewMJordan
# Version:  0.1.0
# Target:   Windows 64-bit

name: $(BuildID)

parameters:
- name: useULF
  displayName: Activate using a Unity License File?
  type: boolean
  default: true

trigger:
  - master
  - develop
pr: none

stages:
- stage: build
  displayName: Build Stage
  jobs:
  - job:
    strategy:
      matrix:
        Windows:
          buildTarget: Win64
          itchChannel: win
        MacOS:
          buildTarget: OSXUniversal
          itchChannel: osx
    workspace:
      clean: outputs
    displayName: Build Project Job
    steps:
    - checkout: self
      clean: false

    - powershell: |
        dotnet new tool-manifest
        dotnet tool install Gooball
      displayName: Install Unity CLI

    - powershell: |
        Invoke-RestMethod -Uri https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default -Outfile "butler.zip"
        Expand-Archive -Path butler.zip -Force -DestinationPath .
      displayName: Install itch CLI
      
    - task: DownloadSecureFile@1
      name: ulfFile
      displayName: Download Unity license
      inputs:
        secureFile: "Unity_v2017.x.ulf"
      condition: eq(${{ parameters.useULF }}, true)
    
    - powershell: |
        dotnet goo unity run -- -batchmode -manualLicenseFile "$(ulfFile.secureFilePath)" -logfile log.txt
        cat log.txt
      displayName: Install Unity license
      condition: eq(${{ parameters.useULF }}, true)

    - powershell: |
        $revision = git rev-parse --short HEAD
        echo "Building revision $revision for $(buildTarget)..."

        dotnet goo project build "$(Build.SourcesDirectory)/$(Custom.ProjectRoot)" -- `
          -logfile log.txt `
          -buildTarget "$(buildTarget)" `
          -executeMethod Andtech.BuildUtility.Build `
          -revision "$revision" `
          -output "$(Build.BinariesDirectory)/$(itchChannel)"
        cat log.txt
      displayName: Build Unity project
    
    - powershell: |
        dotnet goo unity run -- -quit -batchmode -returnlicense -logfile -logfile log.txt
        cat log.txt
      displayName: Return Unity license
      condition: eq(${{ parameters.useULF }}, true)
    
    - powershell: |
        $channel = "$(itchChannel)"

        if ( ![string]::IsNullOrWhiteSpace("$(Custom.Itch.Suffix)") ) {
          $channel = "$channel-$(Custom.Itch.Suffix)"
        }

        if ( "$(Build.SourceBranchName)" -eq "develop" ) {
          $channel = "$channel-head"
        }

        $itchTarget = "$(Custom.Itch.User)/$(Custom.Itch.Game):$channel"
        echo "Publishing $itchTarget..."
        ./butler.exe push "$(Build.BinariesDirectory)/$(itchChannel)" "$itchTarget"
      env:
        BUTLER_API_KEY: $(API.Butler)
      displayName: Upload to itch
